from aiogram import Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from requests import Session
import config
from keyboards import main_menu
from telegram_phone_bot.database import get_db
from tg_phone_bot.models import Phone

router = Router()

class AdminAuth(StatesGroup):
    password = State()

@router.message(Command("admin"))
@router.message(lambda message: message.text == "üîë –ê–¥–º–∏–Ω")
async def request_admin_password(message: types.Message, state: FSMContext):
    await state.set_state(AdminAuth.password)
    await message.answer("üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")

@router.message(AdminAuth.password)
async def check_admin_password(message: types.Message, state: FSMContext):
    if message.text == config.ADMIN_PASSWORD:
        config.ADMIN_ID = message.from_user.id  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await state.clear()
        await message.answer("‚úÖ –í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!", reply_markup=main_menu)
    else:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!")

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

@router.message(Command("my_ads"))
async def my_ads(message: types.Message):
    session: Session = get_db()
    phones = session.query(Phone).filter_by(admin_id=message.from_user.id).all()
    session.close()

    if not phones:
        return await message.answer("üìå –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π.")

    for phone in phones:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_{phone.id}")],
            [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_{phone.id}")]
        ])
        await message.answer(
            f"üì± *{phone.brand} {phone.model}*\nüí∞ –¶–µ–Ω–∞: {phone.price} —Ä—É–±.\nüîã –ë–∞—Ç–∞—Ä–µ—è: {phone.battery}%\n\nüÜî ID: `{phone.id}`",
            parse_mode="Markdown",
            reply_markup=keyboard
        )

    session.close()