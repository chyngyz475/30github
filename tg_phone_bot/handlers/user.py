from aiogram import Router, types
from aiogram.filters import Command
from sqlalchemy.orm import Session
from database import get_db
from models import Phone

router = Router()

# –ö–æ–º–∞–Ω–¥–∞ /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
@router.message(Command("list"))
async def list_phones(message: types.Message, session: Session = get_db()):
    phones = session.query(Phone).filter(Phone.status == "–ê–∫—Ç–∏–≤–Ω–æ").all()

    if not phones:
        await message.answer("üì≠ –û–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç!")
        return

    for phone in phones:
        caption = (
            f"<b>üì± {phone.brand} {phone.model}</b>\n"
            f"üí∞ –¶–µ–Ω–∞: {phone.price} —Ä—É–±.\n"
            f"üîã –ë–∞—Ç–∞—Ä–µ—è: {phone.battery}%\n"
            f"üõ† –°–æ—Å—Ç–æ—è–Ω–∏–µ: {phone.condition}\n"
            f"üìå –û–ø–∏—Å–∞–Ω–∏–µ: {phone.description}"
        )
        
        photos = phone.photos
        media = [types.InputMediaPhoto(photo, caption=caption if i == 0 else "") for i, photo in enumerate(photos)]
        
        if media:
            await message.answer_media_group(media)
        else:
            await message.answer(caption)

    await message.answer("üì≠ –û–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç!")